.. zkay documentation master file, created by
   sphinx-quickstart on Wed Feb  5 14:52:24 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to zkay's documentation!
================================

zkay is a complete solution for writing, deploying and using privacy-enabled smart contracts on Ethereum.

The zkay language, which is a Solidity-like smart contract language, allows you to easily specify data ownership, reclassification operations and private computations.

Given such a zkay contract, zkay's compiler automatically transforms it into a contract equivalent in terms of privacy and functionality, yet executable on public blockchains, by leveraging cryptographic encryption and non-interactive zero-knowledge proofs.


.. toctree::
   :maxdepth: 2
   :caption: Contents:

   getting_started
   tutorial
   language
   release_notes



Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`


Warning
========
This is an initial implementation for research purposes. There might be vulnerabilities or other bugs so you should not use this in production yet.

You should also be aware that zkay currently uses zk-SNARKs to enforce its guarantees, which require a trusted setup phase that is currently performed locally during contract compilation.
By tampering with said setup phase (e.g. by recording the produced toxic waste), a malicious contract owner can break some of the correctness guarantees provided by zkay contracts without any signs of tampering being visible in the contract source code (e.g. by forging zero-knowledge proofs).

**You should thus not blindly trust zkay contracts deployed by untrusted/anonymous users.** (at least until an alternative to zk-SNARKs is available in zkay).

*Note*: This is a general problem with zk-SNARKs and not specific to zkay.

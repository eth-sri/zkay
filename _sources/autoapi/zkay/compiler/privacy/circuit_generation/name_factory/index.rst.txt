:mod:`zkay.compiler.privacy.circuit_generation.name_factory`
============================================================

.. py:module:: zkay.compiler.privacy.circuit_generation.name_factory




Module Contents
---------------

.. py:class:: BaseNameFactory(base_name: str)

   A Base name factory can generate fresh, unused name strings with a given prefix

   .. method:: get_new_name(self, t: TypeName, inc=False)


      Generate a fresh name for a value of type t.

      :param t: transformed type
      :param inc: if True, the internal counter, which is used as part of fresh ids, is incremented



.. py:class:: NameFactory(base_name: str, arg_type: HybridArgType)

   Bases: :class:`zkay.compiler.privacy.circuit_generation.name_factory.BaseNameFactory`

   A Name factory can generate fresh, unused HybridArgumentIdfs with a given prefix.

   .. method:: get_new_idf(self, t: TypeName, priv_expr: Optional[Expression] = None)


      Generate a new HybridArgumentIdf which references priv_expr and has transformed type t.


   .. method:: add_idf(self, name: str, t: TypeName, priv_expr: Optional[Expression] = None)


      Generate a new HybridArgumentIdf with the given name.

      This also adds the HybridArgumentIdf to the internal list of identifiers generated by this NameFactory.



